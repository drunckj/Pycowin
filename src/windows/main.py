#!/bin/python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from threading import Event,Thread
from typing import AsyncGenerator, final
from PyQt5 import QtCore, QtGui, QtWidgets
import json
import requests
import sys
import time
import os
import threading
from playsound import playsound
from requests.models import Response, parse_header_links
from win10toast import ToastNotifier


class Ui_MainWindow(object):
    
    def setupUi(self, main):
        main.setObjectName("main")
        main.resize(800, 1000)

        self.label = QtWidgets.QLabel(main)
        self.label.setGeometry(QtCore.QRect(240, -10, 181, 81))
        self.label.setAutoFillBackground(False)
        self.label.setStyleSheet("font: 81  35pt \"Open Sans\";\n"
"color: rgb(238, 0, 157);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(main)
        self.label_2.setGeometry(QtCore.QRect(90, 150, 66, 19))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(main)
        self.label_3.setGeometry(QtCore.QRect(90, 190, 66, 19))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(main)
        self.label_4.setGeometry(QtCore.QRect(90, 280, 66, 19))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(main)
        self.label_5.setGeometry(QtCore.QRect(90, 320, 66, 19))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(main)
        self.label_6.setGeometry(QtCore.QRect(90, 360, 66, 19))
        self.label_6.setObjectName("label_6")
        self.dose2 = QtWidgets.QRadioButton(main)
        self.dose2.setGeometry(QtCore.QRect(310, 280, 109, 25))
        self.dose2.setObjectName("dose2")
        self.buttonGroup_2 = QtWidgets.QButtonGroup(main)
        self.buttonGroup_2.setObjectName("buttonGroup_2")
        self.buttonGroup_2.addButton(self.dose2)
        self.dose1 = QtWidgets.QRadioButton(main)
        self.dose1.setGeometry(QtCore.QRect(180, 280, 109, 25))
        self.dose1.setObjectName("dose1")
        self.buttonGroup_2.addButton(self.dose1)
        self.covax = QtWidgets.QRadioButton(main)
        self.covax.setGeometry(QtCore.QRect(180, 320, 109, 25))
        self.covax.setObjectName("covax")
        self.buttonGroup_3 = QtWidgets.QButtonGroup(main)
        self.buttonGroup_3.setObjectName("buttonGroup_3")
        self.buttonGroup_3.addButton(self.covax)
        self.covi = QtWidgets.QRadioButton(main)
        self.covi.setGeometry(QtCore.QRect(310, 320, 109, 25))
        self.covi.setObjectName("covi")
        self.buttonGroup_3.addButton(self.covi)
        self.sput = QtWidgets.QRadioButton(main)
        self.sput.setGeometry(QtCore.QRect(440, 320, 109, 25))
        self.sput.setObjectName("sput")
        self.buttonGroup_3.addButton(self.sput)
        self.free = QtWidgets.QRadioButton(main)
        self.free.setGeometry(QtCore.QRect(180, 360, 109, 25))
        self.free.setObjectName("free")
        self.buttonGroup_4 = QtWidgets.QButtonGroup(main)
        self.buttonGroup_4.setObjectName("buttonGroup_4")
        self.buttonGroup_4.addButton(self.free)
        self.paid = QtWidgets.QRadioButton(main)
        self.paid.setGeometry(QtCore.QRect(310, 360, 109, 25))
        self.paid.setObjectName("paid")
        self.buttonGroup_4.addButton(self.paid)
        self.age18 = QtWidgets.QRadioButton(main)
        self.age18.setGeometry(QtCore.QRect(180, 150, 109, 25))
        self.age18.setObjectName("age18")
        self.buttonGroup = QtWidgets.QButtonGroup(main)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.age18)
        self.age45 = QtWidgets.QRadioButton(main)
        self.age45.setGeometry(QtCore.QRect(310, 150, 109, 25))
        self.age45.setObjectName("age45")
        self.buttonGroup.addButton(self.age45)
        self.state = QtWidgets.QComboBox(main)
        self.state.setGeometry(QtCore.QRect(170, 190, 121, 31))
        self.state.setObjectName("state")
        self.state.addItem("")
        self.label_7 = QtWidgets.QLabel(main)
        self.label_7.setGeometry(QtCore.QRect(90, 240, 66, 19))
        self.label_7.setObjectName("label_7")
        self.city = QtWidgets.QComboBox(main)
        self.city.setGeometry(QtCore.QRect(170, 230, 121, 31))
        self.city.setObjectName("city")
        self.city.addItem("")
        self.listView = QtWidgets.QListWidget(main)
        self.listView.setGeometry(QtCore.QRect(50, 460, 700 , 500))
        self.listView.setObjectName("listView")
        #self.verticalScrollBar = QtWidgets.QScrollBar(main)
        #self.verticalScrollBar.setGeometry(QtCore.QRect(620, 460, 20, 291))
        #self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        #self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.search = QtWidgets.QPushButton(main)
        self.search.setGeometry(QtCore.QRect(270, 400, 87, 27))
        self.search.setObjectName("search")
        self.label_8 = QtWidgets.QLabel(main)
        self.label_8.setGeometry(QtCore.QRect(200, 80, 281, 21))
        self.label_8.setObjectName("label_8")

        self.retranslateUi(main)
        self.populate()
        

        QtCore.QMetaObject.connectSlotsByName(main)

    def retranslateUi(self, main):
        _translate = QtCore.QCoreApplication.translate
        main.setWindowTitle(_translate("main", "main"))
        self.label.setText(_translate("main", "Pycowin"))
        self.label_2.setText(_translate("main", "Age :"))
        self.label_3.setText(_translate("main", "State:"))
        self.label_4.setText(_translate("main", "Dose :"))
        self.label_5.setText(_translate("main", "Vaccine: "))
        self.label_6.setText(_translate("main", "Cost:"))
        self.dose2.setText(_translate("main", "Second Dose"))
        self.dose1.setText(_translate("main", "First dose"))
        self.covax.setText(_translate("main", "COVAXINE"))
        self.covi.setText(_translate("main", "COVISHIELD"))
        self.sput.setText(_translate("main", "SPUTNIK"))
        self.free.setText(_translate("main", "FREE"))
        self.paid.setText(_translate("main", "PAID"))
        self.age18.setText(_translate("main", "18-45"))
        self.age45.setText(_translate("main", "above 45"))
        self.state.setItemText(0, _translate("main", "<Select>"))
        self.label_7.setText(_translate("main", "City:"))
        self.city.setItemText(0, _translate("main", "<Select>"))
        self.search.setText(_translate("main", "Search"))
        self.label_8.setText(_translate("main", "Get alerts when vaccines are available"))
        self.state.activated[str].connect(self.populatecity)
        self.city.activated[str].connect(self.idsaver)
        self.search.clicked.connect(self.call_repeatedly)

    def call_repeatedly(self):
        self.searchclick()
        stopped = Event()
        def loop():
            while not stopped.wait(600  ):
                # the first call is in `interval` secs
                self.searchclick()
        Thread(target=loop).start()    
        return stopped.set

    def populate(self):
        response = requests.get("https://cdn-api.co-vin.in/api/v2/admin/location/states")
        global data
        data={}
        data=response.json()
        for i in range(0,36):
            states=data['states'][i]['state_name']
            self.state.addItem(states)
    def populatecity(self):
        self.city.clear()
        global state_name
        global  data_city
        data_city={}
        stateindex=self.state.currentIndex()-1
        city_api="https://cdn-api.co-vin.in/api/v2/admin/location/districts/"+str(stateindex)
        response_city = requests.get(city_api)
        data_city=response_city.json()
        state_name=data['states'][stateindex]['state_name']
        for i in range(0,len(data_city['districts'])):
            self.city.addItem(data_city['districts'][i]['district_name'])
        
    def idsaver(self):
        city_index=self.city.currentIndex()
        global city_name
        global district_id
        district_id=data_city['districts'][city_index]['district_id']
        city_name=data_city['districts'][city_index]['district_name']

    def searchclick(self):
        self.idsaver()
        self.listView.clear()
        a=self.buttonGroup.checkedId()
        b=self.buttonGroup_2.checkedId()
        c=self.buttonGroup_3.checkedId()
        d=self.buttonGroup_4.checkedId()
        global Age
        global vacc
        global Cost
        global Dose
        ##################################
        #age
        if a==-2:
            Age=18
        elif a==-3:
            Age=45
        elif a==-1:
            self.listView.addItem("Please select atleast one option")
        ########################
        #Dose
        if b==-3:
            Dose=1
        elif b==-2:
            Dose=2
        elif b==-1:
            self.listView.addItem("Please select atleast one option")
        ###############################3
        # #cost    
        if d==-2:
            Cost="Free"
        elif d==-3:
            Cost="Paid"
        elif c==-1:
            self.listView.addItem("Please select atleast one option")
        ##############################################33
        # vaccine name    
        if c==-3:
            vacc="COVISHIELD"
        elif c==-2:
            vacc="COVAXIN"
        elif c==-4:
            vacc="SPUTNIK"
            self.listView.addItem("Please select atleast one option")
        self.listView.addItem("State: "+str(state_name))
        self.listView.addItem("City: "+str(city_name))
        self.listView.addItem("District code: "+str(district_id))
        self.listView.addItem("Age: "+str(Age)+"+")
        self.listView.addItem("Dose: "+str(Dose))
        self.listView.addItem("Cost: "+str(Cost))
        self.listView.addItem("Vaccine: "+str(vacc))
        self.listView.addItem("########################################################")
        self.searchvacc()
    def searchvacc(self):
        self.listView.addItem("Searching for Vaccines :")
        global final
        vacc_api="https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id="+str(district_id)+"&date="+str(time.strftime("%d-%m-20%y"))
        vacc_resp=requests.get(vacc_api)
        vacc_data=vacc_resp.json()   
        if Dose==1:
            Dosecheck='available_capacity_dose1'
        elif Dose==2:
            Dosecheck='available_capacity_dose2'
        for i in range(0,len(vacc_data['sessions'])):
            if vacc_data['sessions'][i][Dosecheck]>0:
                if vacc_data['sessions'][i]['min_age_limit']==Age:

                    if vacc_data['sessions'][i]['fee_type']==Cost:
                        if vacc_data['sessions'][i]['vaccine']==vacc:
                            final=json.dumps(vacc_data['sessions'][i])
                            final=final.replace(',','\n')
                            self.listView.addItem(final)
                            self.listView.addItem("########################################################")
                            self.success()
                            

                            
    def success(self):
        toaster = ToastNotifier()
        toaster.show_toast("Vaccines found",duration=10,icon_path="injection.ico")
        self.playsuccess()
    # short delay between notiications
    def playsuccess(self):
        playsound('success.mp3')
        time.sleep(1.5)
 



        
            
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
